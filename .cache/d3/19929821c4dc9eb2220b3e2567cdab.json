{"id":"../node_modules/@aws-sdk/eventstream-marshaller/build/Int64.js","dependencies":[{"name":"/Users/leemarshall/Documents/seedeck/web/node_modules/@aws-sdk/eventstream-marshaller/build/Int64.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/leemarshall/Documents/seedeck/web/package.json","includedInParent":true,"mtime":1575302379989},{"name":"/Users/leemarshall/Documents/seedeck/web/node_modules/@aws-sdk/eventstream-marshaller/package.json","includedInParent":true,"mtime":1575302379379},{"name":"@aws-sdk/util-hex-encoding","loc":{"line":3,"column":34},"parent":"/Users/leemarshall/Documents/seedeck/web/node_modules/@aws-sdk/eventstream-marshaller/build/Int64.js","resolved":"/Users/leemarshall/Documents/seedeck/web/node_modules/@aws-sdk/util-hex-encoding/build/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n */\nvar Int64 = /** @class */ (function () {\n    function Int64(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error('Int64 buffers must be exactly 8 bytes');\n        }\n    }\n    Int64.fromNumber = function (number) {\n        if (number > 9223372036854775807 || number < -9223372036854775808) {\n            throw new Error(number + \" is too large (or, if negative, too small) to represent as an Int64\");\n        }\n        var bytes = new Uint8Array(8);\n        for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    };\n    /**\n     * Called implicitly by infix arithmetic operators.\n     */\n    Int64.prototype.valueOf = function () {\n        var bytes = this.bytes.slice(0);\n        var negative = bytes[0] & 128;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(util_hex_encoding_1.toHex(bytes), 16) * (negative ? -1 : 1);\n    };\n    Int64.prototype.toString = function () {\n        return String(this.valueOf());\n    };\n    return Int64;\n}());\nexports.Int64 = Int64;\nfunction negate(bytes) {\n    for (var i = 0; i < 8; i++) {\n        bytes[i] ^= 0xFF;\n    }\n    for (var i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n"},"sourceMaps":{"js":{"version":3,"file":"Int64.js","sourceRoot":"","sources":["../src/Int64.ts"],"names":[],"mappings":";;AAAA,gEAAmD;AAEnD;;;;;;GAMG;AACH;IACI,eAAqB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAClC,IAAI,KAAK,CAAC,UAAU,KAAK,CAAC,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAA;SAC3D;IACL,CAAC;IAEM,gBAAU,GAAjB,UAAkB,MAAc;QAC5B,IAAI,MAAM,GAAG,mBAAmB,IAAI,MAAM,GAAG,CAAC,mBAAmB,EAAE;YAC/D,MAAM,IAAI,KAAK,CACR,MAAM,wEAAqE,CACjF,CAAC;SACL;QAED,IAAM,KAAK,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;QAC/B,KACI,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EACnD,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,GAAG,CAAC,EACvB,CAAC,EAAE,EAAE,SAAS,IAAI,GAAG,EACvB;YACE,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAA;SACvB;QAED,IAAI,MAAM,GAAG,CAAC,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,CAAC;SACjB;QAED,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,uBAAO,GAAP;QACI,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACjC,IAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAU,CAAA;QACtC,IAAI,QAAQ,EAAE;YACV,MAAM,CAAC,KAAK,CAAC,CAAC;SACjB;QAED,OAAO,QAAQ,CAAC,yBAAK,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3D,CAAC;IAED,wBAAQ,GAAR;QACI,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;IACjC,CAAC;IACL,YAAC;AAAD,CAAC,AA9CD,IA8CC;AA9CY,sBAAK;AAgDlB,SAAS,MAAM,CAAC,KAAiB;IAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAA;KACnB;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACzB,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;QACV,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;YAAE,MAAK;KAC5B;AACL,CAAC","sourcesContent":[null]}},"error":null,"hash":"cbe88dd456812f4a90c42ee89a0a8abc","cacheData":{"env":{}}}