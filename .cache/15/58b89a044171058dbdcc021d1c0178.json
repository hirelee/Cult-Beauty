{"id":"../node_modules/@aws-sdk/util-hex-encoding/build/index.js","dependencies":[{"name":"/Users/leemarshall/Documents/seedeck/web/node_modules/@aws-sdk/util-hex-encoding/build/index.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/leemarshall/Documents/seedeck/web/package.json","includedInParent":true,"mtime":1575302379989},{"name":"/Users/leemarshall/Documents/seedeck/web/node_modules/@aws-sdk/util-hex-encoding/package.json","includedInParent":true,"mtime":1575302379372}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SHORT_TO_HEX = {};\nvar HEX_TO_SHORT = {};\nfor (var i = 0; i < 256; i++) {\n    var encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = \"0\" + encodedByte;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    var out = new Uint8Array(encoded.length / 2);\n    for (var i = 0; i < encoded.length; i += 2) {\n        var encodedByte = encoded.substr(i, 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(\"Cannot decode unrecognized sequence \" + encodedByte + \" as hexadecimal\");\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nfunction toHex(bytes) {\n    var out = '';\n    for (var i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"./src/","sources":["index.ts"],"names":[],"mappings":";;AAAA,IAAM,YAAY,GAA4B,EAAE,CAAC;AACjD,IAAM,YAAY,GAA4B,EAAE,CAAC;AAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC1B,IAAI,WAAW,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/C,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,WAAW,GAAG,MAAI,WAAa,CAAC;KACnC;IAED,YAAY,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC9B,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;CACjC;AAED;;;;GAIG;AACH,SAAgB,OAAO,CAAC,OAAe;IACnC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC1B,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;KAC1E;IAED,IAAM,GAAG,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACxC,IAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACvD,IAAI,WAAW,IAAI,YAAY,EAAE;YAC7B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;SAC1C;aAAM;YACH,MAAM,IAAI,KAAK,CACX,yCAAuC,WAAW,oBAAiB,CACtE,CAAC;SACL;KACJ;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAlBD,0BAkBC;AAGD;;;;GAIG;AACH,SAAgB,KAAK,CAAC,KAAiB;IACnC,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;QACvC,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACjC;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAPD,sBAOC","sourcesContent":[null]}},"error":null,"hash":"bc4a36f6a635b185800da0f0f37dc474","cacheData":{"env":{}}}